(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{a:()=>p});class e{constructor(){this.title,this.description,this.dueDate,this.priority,this.notes,this.checkList=[]}addChecklistItem(t,e){const n={};n.value=t,n.state=e||!1,this.checkList.push(n)}removeChecklistItem(t){this.checkList.splice(this.checkList.indexOf(t),1)}}class n{constructor(){this._defaultStatus=!1,this.title,this.todoList=[]}isDefault(){return this._defaultStatus}setDefaultStatus(t){this._defaultStatus=t}addTodo(t){this.todoList.push(t)}removeTodo(t){this.todoList.splice(this.todoList.indexOf(t),1)}}class o{projectsList=[];addProject(t){this.projectsList.push(t)}removeProject(t){this.projectsList.splice(this.projectsList.indexOf(t),1)}}const s={events:{},subscribe:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},publish:function(t,e){this.events[t]&&this.events[t].forEach((t=>{t(e)}))}};class i{projectModal(){const t=document.querySelector("form");t.textContent="";const e=document.createElement("label");e.textContent="Title:";const n=document.createElement("input");n.setAttribute("name","title"),n.setAttribute("id","title"),n.setAttribute("type","text");const o=document.createElement("label");o.textContent="Set as default";const s=document.createElement("input");s.setAttribute("name","isdefault"),s.setAttribute("id","isdefault"),s.setAttribute("type","checkbox");const i=document.createElement("button");i.textContent="Done",i.setAttribute("id","done-button");const c=document.createElement("button");c.textContent="Cancel",c.setAttribute("id","close-dialog"),c.setAttribute("formmethod","dialog"),c.setAttribute("type","button");const d=document.createElement("span");return d.setAttribute("id","error-span"),t.append(e,n,o,s,i,c,d)}todoPropertiesToInject=[new c,new d,new r,new l,new a,new u];todoModal(t){const e=document.querySelector("form");e.textContent="";for(let n of t){const t=document.createElement("label");t.textContent=n.name,t.setAttribute("for",n.nameAsHTMLAttribute),e.append(t,n.createInputElementsForForm())}const n=document.createElement("button");n.textContent="Done",n.setAttribute("id","done-button"),n.setAttribute("type","submit");const o=document.createElement("button");o.textContent="Cancel",o.setAttribute("id","close-dialog"),o.setAttribute("formmethod","dialog"),o.setAttribute("type","button");const s=document.createElement("span");s.setAttribute("id","error-span"),e.append(n,o,s)}}class c{constructor(){this.name="Title",this.nameAsHTMLAttribute="title"}createInputElementsForForm(){const t=document.createElement("input");return t.setAttribute("type","text"),t.setAttribute("id",this.nameAsHTMLAttribute),t.setAttribute("name",this.nameAsHTMLAttribute),t}displayDetailsFromTodoAsEditable(t){const e=document.createElement("input");return e.setAttribute("type","text"),e.setAttribute("id","title-input"),e.value=t.title,e}}class d{constructor(){this.name="Description",this.nameAsHTMLAttribute="description"}createInputElementsForForm(){const t=document.createElement("textarea");return t.setAttribute("id",this.nameAsHTMLAttribute),t.setAttribute("name",this.nameAsHTMLAttribute),t}displayElementsWithContentForTodoScreen(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=document.createElement("p");return o.textContent=t.description,e.appendChild(o),e}displayDetailsFromTodoAsEditable(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=this.createInputElementsForForm();return e.appendChild(o),o.textContent=t.description,e}}class r{constructor(){this.name="Due Date",this.nameAsHTMLAttribute="due-date"}createInputElementsForForm(){const t=document.createElement("input");return t.setAttribute("type","date"),t.setAttribute("id",this.nameAsHTMLAttribute),t.setAttribute("name",this.nameAsHTMLAttribute),t}displayElementsWithContentForTodoScreen(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=document.createElement("p");return o.textContent=t.dueDate,e.appendChild(o),e}displayDetailsFromTodoAsEditable(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=this.createInputElementsForForm();return e.appendChild(o),o.value=t.dueDate,e}}class l{constructor(){this.name="Priority",this.nameAsHTMLAttribute="priority"}createInputElementsForForm(){const t=function(){const t=document.createElement("select"),e=["High","Medium","Normal"],n=document.createElement("option");n.textContent="Select an option",n.setAttribute("value",""),n.setAttribute("selected",""),t.appendChild(n);for(let n of e){const e=document.createElement("option");e.textContent=n,e.setAttribute("value",n[0].toLowerCase()+n.slice(1)),t.appendChild(e)}return t}();return t.setAttribute("id",this.nameAsHTMLAttribute),t.setAttribute("name",this.nameAsHTMLAttribute),t}displayElementsWithContentForTodoScreen(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=document.createElement("p");return o.textContent=t.priority,e.appendChild(o),e}displayDetailsFromTodoAsEditable(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=this.createInputElementsForForm();return e.appendChild(o),o.value=t.priority,e}}class a{constructor(){this.name="Notes",this.nameAsHTMLAttribute="notes"}createInputElementsForForm(){const t=document.createElement("textarea");return t.setAttribute("id",this.nameAsHTMLAttribute),t.setAttribute("name",this.nameAsHTMLAttribute),t}displayElementsWithContentForTodoScreen(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=document.createElement("p");return o.textContent=t.notes,e.appendChild(o),e}displayDetailsFromTodoAsEditable(t){const e=document.createElement("fieldset"),n=document.createElement("legend");n.textContent=this.name,e.appendChild(n);const o=this.createInputElementsForForm();return e.appendChild(o),o.textContent=t.notes,e}}class u{constructor(){this.name="Checklist",this.nameAsHTMLAttribute="checklist-input"}createInputElementsForForm(){const t=document.createElement("div");t.setAttribute("id","checklist-div");const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id",this.nameAsHTMLAttribute);const n=document.createElement("button");return n.textContent="Add",n.setAttribute("type","button"),n.setAttribute("id","checklist-add-button"),t.append(e,n),t}displayElementsWithContentForTodoScreen(t,e){const n=document.createElement("fieldset");n.setAttribute("id","checklist-fieldset");const o=document.createElement("legend");o.textContent=this.name,n.appendChild(o);const i=document.createElement("div"),c=document.createElement("input");c.setAttribute("id","checklist-input-todo");const d=document.createElement("button");d.textContent="Add",d.setAttribute("id","checklist-add-button-todo"),i.append(c,d),n.appendChild(i);const r=document.createElement("ul");for(let n of t.checkList){const o=document.createElement("li");r.appendChild(o);const i=document.createElement("input");i.setAttribute("type","checkbox"),!0===n.state?i.checked=!0:i.checked=!1,i.addEventListener("change",(t=>{!0===n.state?n.state=!1:n.state=!0,s.publish("localStorageUpdated")}));const c=document.createElement("label");c.textContent=n.value;const d=document.createElement("button");d.textContent="x",d.addEventListener("click",(o=>{s.publish("checklistItemDeleted",{checklistItem:n,todoItem:t,projectItem:e})})),o.append(i,c,d)}return n.appendChild(r),n}}s.subscribe("todoItemDeleted",(function({todoItem:t,projectItem:e}){e.removeTodo(t),s.publish("localStorageUpdated")})),s.subscribe("todoItemAdded",(function({todoItem:t,projectItem:n}){let o=new e;for(let e in t)"_state"!==e&&("due-date"===e?o.dueDate=t[e]:o[e]=t[e]);n.addTodo(o),s.publish("localStorageUpdated")})),s.subscribe("projectItemDeleted",(function(t){p.removeProject(t),s.publish("localStorageUpdated")})),s.subscribe("projectItemAdded",(function(t){let e=new n;for(let n in t)if("_defaultStatus"!==n)if("isdefault"===n)if("on"===t.isdefault){e.setDefaultStatus(!0);for(let t of p.projectsList)if(t.isDefault()){t.setDefaultStatus(!1);break}console.log(t.title,"project is now the default")}else e.setDefaultStatus(!1);else e[n]=t[n];t.isDefault&&(t.isDefault()?e.setDefaultStatus(!0):e.setDefaultStatus(!1)),p.addProject(e),s.publish("localStorageUpdated")})),s.subscribe("todoItemAdded",b),s.subscribe("todoItemDeleted",b),s.subscribe("projectItemDeleted",f),s.subscribe("projectItemAdded",f),s.subscribe("checklistItemDeleted",(function({checklistItem:t,todoItem:e}){e.removeChecklistItem(t),s.publish("localStorageUpdated")})),s.subscribe("checklistItemDeleted",h),s.subscribe("checklistItemAdded",(function({checklistItem:t,todoItem:e}){e.addChecklistItem(t),s.publish("localStorageUpdated")})),s.subscribe("checklistItemAdded",h),s.subscribe("updateProjectDefaultStatus",(function(t){t.setDefaultStatus(!0);for(let e of p.projectsList)if(t!==e&&e.isDefault()){e.setDefaultStatus(!1);break}s.publish("localStorageUpdated")})),s.subscribe("localStorageUpdated",(function(){!function(t){let e;try{e=window.localStorage;const t="__storage_test__";return e.setItem(t,t),e.removeItem(t),!0}catch(t){return t instanceof DOMException&&(22===t.code||1014===t.code||"QuotaExceededError"===t.name||"NS_ERROR_DOM_QUOTA_REACHED"===t.name)&&e&&0!==e.length}}()?alert("Too bad, no localStorage for us"):(console.log(p),localStorage.setItem("allProjects",JSON.stringify(p)),console.log("Local Storage Updated!"))}));const m=new class{#t=new i;constructor(){this.pageTitle=document.querySelector("h2"),this.navButton=document.querySelector("nav"),this.actionButtons=document.querySelector("#action-buttons"),this.itemsList=document.querySelector("#items-list"),this.dialog=document.querySelector("dialog"),this.form=document.querySelector("form")}displayTodosScreen(t){this.pageTitle.textContent="",this.navButton.textContent="",this.actionButtons.textContent="",this.itemsList.textContent="",this.form.textContent="",this.#t.todoModal(this.#t.todoPropertiesToInject),this.pageTitle.textContent=t.title,this.navButton.textContent="< Back to Projects",this.navButton.addEventListener("click",(t=>{this.displayProjectsScreen(p)}));const e=document.createElement("button");e.textContent="New Todo",this.actionButtons.appendChild(e),e.addEventListener("click",(t=>{this.dialog.showModal()}));const n=document.createElement("div"),o=document.createElement("label");o.textContent="Set as default",o.setAttribute("for","set-as-default-input");const i=document.createElement("input");if(i.setAttribute("type","checkbox"),i.setAttribute("id","set-as-default-input"),t.isDefault()&&(i.checked=!0,i.disabled=!0),i.addEventListener("change",(e=>{"on"===i.value&&(s.publish("updateProjectDefaultStatus",t),i.disabled=!0)})),n.append(o,i),this.actionButtons.appendChild(n),0===t.todoList.length)this.itemsList.textContent="There are no todos here...";else for(let e of t.todoList){const n=document.createElement("li"),o=document.createElement("span");o.textContent=e.title,o.addEventListener("click",(n=>{this.displaySingleTodoScreen(e,t)})),n.appendChild(o);const i=document.createElement("button");i.textContent="delete",i.addEventListener("click",(n=>{s.publish("todoItemDeleted",{todoItem:e,projectItem:t})})),n.appendChild(i),this.itemsList.appendChild(n)}const c=document.querySelector("#checklist-div"),d=document.querySelector("#checklist-input"),r=document.querySelector("#checklist-add-button");r.disabled=!0,d.addEventListener("input",(t=>{d.value.length>0?r.disabled=!1:r.disabled=!0}));const l=document.createElement("ul");c.appendChild(l);const a=[];r.addEventListener("click",(t=>{const e={};e.value=d.value,a.push(e);const n=document.createElement("li");n.textContent=d.value,l.appendChild(n),d.value="",d.focus()})),document.querySelector("#todo-project-modal #done-button").addEventListener("click",(e=>{e.preventDefault();const n=new FormData(this.form),o=Object.fromEntries(n.entries());0!==o.title.trim().length?(o.checkList=a,s.publish("todoItemAdded",{todoItem:o,projectItem:t}),this.form.reset(),this.dialog.close()):document.querySelector("#error-span").textContent="Please enter add a title"})),document.querySelector("#todo-project-modal #close-dialog").addEventListener("click",(()=>{this.dialog.close()}))}displayProjectsScreen(t){this.pageTitle.textContent="",this.navButton.textContent="",this.actionButtons.textContent="",this.itemsList.textContent="",this.form.textContent="",this.#t.projectModal(),this.pageTitle.textContent="All Projects";const e=document.createElement("button");if(e.textContent="New Project",this.actionButtons.appendChild(e),e.addEventListener("click",(t=>{this.dialog.showModal()})),0===t.projectsList.length)this.itemsList.textContent="There are no projects...";else for(let e of t.projectsList){const t=document.createElement("li"),n=document.createElement("span");n.textContent=e.title,n.addEventListener("click",(t=>{this.displayTodosScreen(e)})),t.appendChild(n);const o=document.createElement("button");o.textContent="delete",o.addEventListener("click",(t=>{s.publish("projectItemDeleted",e)})),t.appendChild(o),this.itemsList.appendChild(t)}document.querySelector("#todo-project-modal #done-button").addEventListener("click",(t=>{t.preventDefault();const e=new FormData(this.form),n=Object.fromEntries(e.entries());0!==n.title.trim().length?(s.publish("projectItemAdded",n),this.form.reset(),this.dialog.close()):document.querySelector("#error-span").textContent="Please type the project name"})),document.querySelector("#todo-project-modal #close-dialog").addEventListener("click",(()=>{this.dialog.close()}))}displaySingleTodoScreen(t,e){this.pageTitle.textContent="",this.navButton.textContent="",this.actionButtons.textContent="",this.itemsList.textContent="",this.form.textContent="",this.pageTitle.textContent=t.title,this.navButton.textContent="< Back to Todos list",this.navButton.addEventListener("click",(t=>{this.displayTodosScreen(e)}));const n=document.createElement("button");n.textContent="Edit",this.actionButtons.appendChild(n),n.addEventListener("click",(o=>{if("Edit"===n.textContent){n.textContent="Save changes",this.itemsList.textContent="";for(let e of this.#t.todoPropertiesToInject)if("Title"===e.name)this.pageTitle.textContent="",this.pageTitle.appendChild(e.displayDetailsFromTodoAsEditable(t));else{if("Checklist"===e.name)continue;this.itemsList.appendChild(e.displayDetailsFromTodoAsEditable(t))}const e=document.createElement("span");e.setAttribute("id","error-span"),e.textContent="",this.itemsList.appendChild(e)}else{const n=document.querySelector("#title-input"),o=document.querySelector("#description"),i=document.querySelector("#due-date"),c=document.querySelector("#priority"),d=document.querySelector("#notes");if(0===n.value.trim().length)return void(document.querySelector("#error-span").textContent="Todo must have a title");t.title=n.value,t.description=o.value,t.dueDate=i.value,t.priority=c.value,t.notes=d.value,this.displaySingleTodoScreen(t,e),s.publish("localStorageUpdated")}}));for(let n of this.#t.todoPropertiesToInject)"Title"!==n.name&&this.itemsList.appendChild(n.displayElementsWithContentForTodoScreen(t,e));const o=document.querySelector("#checklist-add-button-todo"),i=document.querySelector("#checklist-input-todo");o.disabled=!0,i.addEventListener("input",(t=>{i.value.length>0?o.disabled=!1:o.disabled=!0})),o.addEventListener("click",(n=>{let o=i.value;s.publish("checklistItemAdded",{checklistItem:o,todoItem:t,projectItem:e})}))}};let p;if(localStorage.getItem("allProjects")){p=function(t){const s=JSON.parse(localStorage.getItem("allProjects")),i=new o;for(let t of s.projectsList){const o=new n;for(let n of t.todoList){const t=new e;for(let e of n.checkList){const n=e;t.addChecklistItem(n,e.state)}for(let e in n)"checkList"!==e&&(t[e]=n[e]);o.addTodo(t)}for(let e in t)"todoList"!==e&&(o[e]=t[e]);i.addProject(o)}return i}(),console.log(p);for(let t of p.projectsList)if(t.isDefault){m.displayTodosScreen(t);break}}else{p=new o;const t=new n;t.setDefaultStatus(!0),t.title="My Project",s.publish("projectItemAdded",t),m.displayTodosScreen(t)}function h({checklistItem:t,todoItem:e,projectItem:n}){m.displaySingleTodoScreen(e,n),s.publish("localStorageUpdated")}function b({todoItem:t,projectItem:e}){m.displayTodosScreen(e),s.publish("localStorageUpdated")}function f(){m.displayProjectsScreen(p),s.publish("localStorageUpdated")}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,